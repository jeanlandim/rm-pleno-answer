version: '3.8'

x-common-env: &common_env
  env_file:
    - .env
  environment:
    DJANGO_PROJECT_NAME: ${DJANGO_PROJECT_NAME}
    DJANGO_HOST: ${DJANGO_HOST}
    DJANGO_PORT: ${DJANGO_PORT}
    DJANGO_SETTINGS_MODULE: ${DJANGO_SETTINGS_MODULE}
    POSTGRES_DB: ${POSTGRES_DB}
    POSTGRES_USER: ${POSTGRES_USER}
    POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    POSTGRES_HOST: ${POSTGRES_HOST_FOR_DOCKER_COMPOSE}
    POSTGRES_PORT: ${POSTGRES_PORT}
    CELERY_BROKER_URL: ${CELERY_BROKER_URL_FOR_DOCKER_COMPOSE}
    CELERY_RESULT_BACKEND: ${CELERY_RESULT_BACKEND_FOR_DOCKER_COMPOSE}
    REDIS_PORT: ${REDIS_PORT}

services:
  db:
    image: postgres:14
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    <<: *common_env
    ports:
       - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    restart: always

  redis:
    image: redis:6-alpine
    restart: always
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"

  init_db:
    build: .
    command: python manage.py migrate --noinput
    volumes:
      - .:/app
    <<: *common_env
    depends_on:
      - db

  django:
    build: .
    command: gunicorn --bind ${DJANGO_HOST}:${DJANGO_PORT} ${DJANGO_PROJECT_NAME}.wsgi:application
    volumes:
      - .:/app
    ports:
      - "${DJANGO_PORT}:${DJANGO_PORT}"
    <<: *common_env
    depends_on:
      - db
      - redis
      - init_db
    restart: always

  celery_worker:
    build: .
    command: celery -A ${DJANGO_PROJECT_NAME} worker -l info
    volumes:
      - .:/app
    <<: *common_env
    depends_on:
      - db
      - redis
      - django
      - init_db
    restart: always

volumes:
  postgres_data: